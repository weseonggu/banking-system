server:
  port: 19096

spring:
  application:
    name: PersonalHistoryService
  kafka:
    bootstrap-servers: localhost:9092
  cloud:
    bus:
      destination: banking-platform.dev.event.config-event.json
      refresh:
        enabled: true
      env:
        enabled: true
  main:
    allow-bean-definition-overriding: true # 동일한 이름의 빈이 존재할 때 덮어쓰기를 허용하도록 설정

  data:
    redis:
      host: localhost
      port: 6379
      username: default
      password: systempass

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/personal
    username: banking
    password: banking20

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 1000

    kafka:
      bootstrap-servers: localhost:9092
      consumer:
        group-id: ${spring.application.name}-group
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
          spring.json.trusted.packages: '*'
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/
    health-check:
      enabled: true
  instance:
    hostname: localhost
    metadata-map:
      instanceId: ${spring.application.name}:${spring.cloud.client.hostname}
    lease-renewal-interval-in-seconds: 30  # 기본값은 30초, 서비스 상태 갱신 주기
    lease-expiration-duration-in-seconds: 90  # 기본값은 90초, 서비스 갱신이 없을 때 만료 시간
    health-check-url-path: /actuator/health # 헬스 체크를 통한 정상작동 확인

management:
  server:
    port: 29096
  endpoints:
    web:
      exposure:
        include: "*, busrefresh, prometheus"
  endpoint:
    health:
      show-details: always
    env:
      show-values: "ALWAYS"
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0
  metrics:
    export:
      prometheus:
        enabled: true

common:
  bean:
    security:
      auth: true
      class: true

service:
  jwt:
    secret-key: "401b09eab3c013d4ca54922bb802bec8fd5318192b0a75f201d8b3727429080fb337591abd3e44453b954555b7a0812e1081c39b740293f765eae731f5a65ed1"

test:
  config-name: PersonalHistory13-Server

springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
    path: /v3/api-docs  # 각 서비스의 Swagger API 기본 경로
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json